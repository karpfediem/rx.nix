# Auto-generated by options-generator. Do not edit.
{ lib, ... }:
let
  inherit (lib) mkOption types;
in
{
  options.rx.res.msg = mkOption {
    description = ''MsgRes is a resource that writes messages to logs.'';
    type = types.attrsOf (types.submodule ({ name, ... }: {
      options = {
        body = mkOption {
          type = types.str;
          description = ''Body is the body of the message to send.'';
        };
        fields = mkOption {
          type = types.attrsOf types.str;
          description = ''Fields are the key/value pairs set in the journal if we are using it.'';
        };
        journal = mkOption {
          type = types.bool;
          description = ''Journal should be true to enable systemd journaled (journald) output.'';
        };
        priority = mkOption {
          type = types.str;
          description = ''Priority is the priority of the message. Currently this is one of:
Emerg, Alert, Crit, Err, Warning, Notice, Info, Debug.'';
        };
        syslog = mkOption {
          type = types.bool;
          description = ''Syslog should be true to enable traditional syslog output. This is
probably going to somewhere in `/var/log/` on your filesystem.'';
        };
      };
    }));
    default = {};
  };
}
