# Auto-generated by codegen. Do not edit.
{ lib, ... }:
let
  inherit (lib) mkOption types;
in
{
  options.rx.res.svc = mkOption {
    description = ''SvcRes is a service resource for systemd units.'';
    type = types.attrsOf (types.submodule ({ name, ... }: {
      options = {
        session = mkOption {
          type = types.nullOr (types.bool);
          description = ''Session specifies if this is for a system service (false) or a user
session specific service (true).
user session (true) or system?'';
          default = null;
        };
        startup = mkOption {
          type = types.nullOr (types.str);
          description = ''Startup specifies what should happen on startup. Values can be:
enabled, disabled, and undefined (empty string).'';
          default = null;
        };
        state = mkOption {
          type = types.nullOr (types.str);
          description = ''State is the desired state for this resource. Valid values include:
running, stopped, and undefined (empty string).'';
          default = null;
        };
      };
    }));
    default = {};
  };
}
