# Auto-generated by options-generator. Do not edit.
{ lib, ... }:
let
  inherit (lib) mkOption types;
in
{
  options.rx.res.tftp-file = mkOption {
    description = ''TFTPFileRes is a file that exists within a tftp server. The name is used as
the public path of the file, unless the filename field is specified, and in
that case it is used instead. The way this works is that it autogroups at
runtime with an existing tftp resource, and in doing so makes the file
associated with this resource available for serving from that tftp server.'';
    type = types.attrsOf (types.submodule ({ name, ... }: {
      options = {
        data = mkOption {
          type = types.str;
          description = ''Data is the file content that should be used as the source for this
file resource. It must not be combined with the path field.
TODO: should this be []byte instead?'';
        };
        filename = mkOption {
          type = types.str;
          description = ''Filename is the name of the file this data should appear as on the
tftp server.'';
        };
        path = mkOption {
          type = types.str;
          description = ''Path is the absolute path to a file that should be used as the source
for this file resource. It must not be combined with the data field.'';
        };
        server = mkOption {
          type = types.str;
          description = ''Server is the name of the tftp server resource to group this into. If
it is omitted, and there is only a single tftp resource, then it will
be grouped into it automatically. If there is more than one main tftp
resource being used, then the grouping behaviour is *undefined* when
this is not specified, and it is not recommended to leave this blank!'';
        };
      };
    }));
    default = {};
  };
}
