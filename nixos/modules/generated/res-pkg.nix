# Auto-generated by options-generator. Do not edit.
{ lib, ... }:
let
  inherit (lib) mkOption types;
in
{
  options.rx.res.pkg = mkOption {
    description = ''PkgRes is a package resource for packagekit.'';
    type = types.attrsOf (types.submodule ({ name, ... }: {
      options = {
        allownonfree = mkOption {
          type = types.bool;
          description = ''AllowNonFree specifies if we want to allow nonfree packages to be
found? Please see the PackageKit documentation for more information.'';
        };
        allowunsupported = mkOption {
          type = types.bool;
          description = ''AllowUnsupported specifies if we want to unsupported packages to be
found? Please see the PackageKit documentation for more information.'';
        };
        allowuntrusted = mkOption {
          type = types.bool;
          description = ''AllowUntrusted specifies if we want to allow untrusted packages to be
installed. Please see the PackageKit documentation for more
information.'';
        };
        state = mkOption {
          type = types.str;
          description = ''State determines if we want to install or uninstall the package, and
what version we want to pin if any. Valid values include: installed,
uninstalled, newest, and `version`, where you just put the raw
version string desired.'';
        };
      };
    }));
    default = {};
  };
}
